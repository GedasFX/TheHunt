// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TheHunt.Data;
using TheHunt.Domain;

#nullable disable

namespace TheHunt.Domain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221230220438_Comp1")]
    partial class Comp1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TheHunt.Domain.Models.Competition", b =>
                {
                    b.Property<decimal>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("channel_id");

                    b.HasKey("ChannelId");

                    b.ToTable("competitions");
                });

            modelBuilder.Entity("TheHunt.Domain.Models.Competition", b =>
                {
                    b.OwnsOne("TheHunt.Domain.Models.SheetsRef", "Spreadsheet", b1 =>
                        {
                            b1.Property<decimal>("CompetitionChannelId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<string>("SheetName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("sheet_name");

                            b1.Property<string>("SpreadsheetId")
                                .IsRequired()
                                .HasMaxLength(44)
                                .HasColumnType("character varying(44)")
                                .HasColumnName("spreadsheet_id");

                            b1.HasKey("CompetitionChannelId");

                            b1.ToTable("competitions");

                            b1.WithOwner()
                                .HasForeignKey("CompetitionChannelId");

                            b1.OwnsOne("TheHunt.Domain.Models.SheetsRef+Sheet", "Sheets", b2 =>
                                {
                                    b2.Property<decimal>("SheetsRefCompetitionChannelId")
                                        .HasColumnType("numeric(20,0)");

                                    b2.Property<int>("Items")
                                        .HasColumnType("integer")
                                        .HasColumnName("sheet_items");

                                    b2.Property<int>("Members")
                                        .HasColumnType("integer")
                                        .HasColumnName("sheet_members");

                                    b2.Property<int>("Overview")
                                        .HasColumnType("integer")
                                        .HasColumnName("sheet_overview");

                                    b2.Property<int>("Submissions")
                                        .HasColumnType("integer")
                                        .HasColumnName("sheet_submissions");

                                    b2.HasKey("SheetsRefCompetitionChannelId");

                                    b2.ToTable("competitions");

                                    b2.WithOwner()
                                        .HasForeignKey("SheetsRefCompetitionChannelId");
                                });

                            b1.Navigation("Sheets")
                                .IsRequired();
                        });

                    b.Navigation("Spreadsheet")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
