syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package TheHunt;

service Competition {
  rpc ListCompetitions (ListCompetitionsQuery) returns (ListCompetitionsResponse) {
    option (google.api.http) = {
      get: "/competitions",
    };
  };

  rpc GetCompetition (GetCompetitionQuery) returns (GetCompetitionResponse) {
    option (google.api.http) = {
      get: "/competitions/{id}",
    };
  };

  rpc CreateCompetition (CreateCompetitionCommand) returns (CreateCompetitionResponse) {
    option (google.api.http) = {
      post: "/competitions",
      body: "*",
    };
  };

  rpc UpdateCompetition (UpdateCompetitionCommand) returns (UpdateCompetitionResponse) {
    option (google.api.http) = {
      put: "/competitions/{id}",
      body: "*",
    };
  };

  rpc DeleteCompetition (DeleteCompetitionCommand) returns (DeleteCompetitionResponse) {
    option (google.api.http) = {
      delete: "/competitions/{id}",
    };
  };
}

message CompetitionDto {
  string id = 1;

  string name = 2;
  optional string description = 3;

  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
}

message ListCompetitionsQuery {
  PageInfo page = 1;
}
message ListCompetitionsResponse {
  repeated CompetitionDto items = 1;
}

message GetCompetitionQuery {
  string id = 1;
}
message GetCompetitionResponse {
  CompetitionDto item = 1;
}

message CompetitionRequest {
  string name = 1;
  optional string description = 2;

  bool is_listed = 3;

  google.protobuf.Timestamp start_date = 5;
  google.protobuf.Timestamp end_date = 6;
}

message CreateCompetitionCommand {
  CompetitionRequest item = 1;
}
message CreateCompetitionResponse {
  string id = 1;
}

message UpdateCompetitionCommand {
  string id = 1;
  CompetitionRequest item = 2;
}
message UpdateCompetitionResponse {
}

message DeleteCompetitionCommand {
  string id = 1;
}
message DeleteCompetitionResponse {
}

message PageInfo {
  int32 index = 1;
  int32 size = 2;
}